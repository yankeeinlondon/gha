name: Test

on:
  workflow_call:
    inputs:
      os:
        type: string
        default: '["ubuntu-latest", "windows-latest", "macos-latest"]'
        required: false
      nodeVersions:
        type: string
        default: '["20.x", "22.x"]'
        required: false
      failFast:
        type: boolean
        default: false
        required: false
      metrics:
        type: boolean
        default: false
        required: false
      metricsCommand:
        type: string
        default: "pnpm test:metrics"
        required: false
      api_token:
        type: string
        description: "allows an API token to be passed to testing as API_TOKEN and VITE_API_TOKEN"
        default: ""
        required: false
      gh_token:
        description: "allows a Github personal access token to be passed to testing as GH_TOKEN and VITE_GH_TOKEN"
        type: string
        default: ""
        required: false
      bitbucket_token:
        type: string
        default: ""
        required: false
      gitlab_token:
        type: string
        default: ""
        required: false
      bun:
        type: boolean
        default: false
        required: false

    secrets:
      gh_token:
        required: false
      bitbucket_token:
        required: false
      gitlab_token:
        required: false
      api_token:
        required: false

jobs:
  metrics:
    name: metrics
    runs-on: ubuntu-latest
    if: ${{ inputs.metrics }}

    steps:
      - name: Github Token
        if: ${{ env.GH_TOKEN != '' }}
        run: |
          echo "::notice:: GH_TOKEN and VITE_GH_TOKEN env variables are available for testing."
      - name: API Token
        if: ${{ env.API_TOKEN != '' }}
        run: |
          echo "::notice:: API_TOKEN and VITE_API_TOKEN env variables are available for testing."
      - name: Bitbucket Token
        if: ${{ env.BITBUCKET_TOKEN != '' }}
        run: |
          echo "::notice:: BITBUCKET_TOKEN and VITE_BITBUCKET_TOKEN env variables are available for testing."
      - name: Gitlab Token
        if: ${{ env.GITLAB_TOKEN != '' }}
        run: |
          echo "::notice:: GITLAB_TOKENs and VITE_GITLAB_TOKENs env variables are available for testing."
      - name: Bun
        if: inputs.bun
        uses: oven-sh/setup-bun@v2
        
      - name: ENV Flag for Windows
        env: 
          OS: $RUNNER_OS
        run: |
          echo "OS=${RUNNER_OS}"

      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
      - name: Setup
        run: npm i -g pnpm @antfu/ni
      - name: Install
        run: pnpm install
      - name: Build
        run: nr build
      - name: Test
        id: test
        run: |
          ::set-output name=results::`${{ inputs.metricsCommand }}`
      - name: Results
        env:
          TST: fromJSON(steps.test.results)
        run: |
          echo "::notice :: $TST.numTotalTests tests, $TST.numPassedTests passed, $TST.numFailedTests [ $TST.numTodoTests todos, $TST.numPendingTests  pending ]"

  test:
    name: test
    runs-on: ${{ matrix.os }}
    env:
      VITE_GH_TOKEN: ${{ secrets.gh_token }}
      GH_TOKEN: ${{ secrets.gh_token }}
      VITE_BITBUCKET_TOKEN: ${{ secrets.bitbucket_token }}
      BITBUCKET_TOKEN: ${{ secrets.bitbucket_token }}
      VITE_GITLAB_TOKEN: ${{ secrets.gitlab_token }}
      GITLAB_TOKEN: ${{ secrets.gitlab_token }}
      API_TOKEN: ${{ secrets.api_token }}
      VITE_API_TOKEN: ${{ secrets.api_token }}
      OS: $RUNNER_OS
    strategy:
      matrix:
        node-version: ${{ fromJSON(inputs.nodeVersions) }}
        os: ${{ fromJSON(inputs.os) }}
      # fail-fast: ${{ inputs.failFast }}
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
        if: inputs.bun
      - name: Bun Install
        run: bun install
        if: inputs.bun
      - name: Bun Builder
        run: bun run build
        if: inputs.bun
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Setup
        run: npm i -g pnpm @antfu/ni
      - name: Install
        run: pnpm install
      - name: Build
        run: nr build
      - name: Test
        run: pnpm test

  complete:
    name: complete
    runs-on: ubuntu-latest
    needs:
      - test

    steps:
      - name: Success
        run: |
          echo ":rocket: tests run successfully"
          echo "::notice status=success::Tests and Linting completed successfully. The changes in this commit versus last can be found at: ${{ github.event.compare }}"
