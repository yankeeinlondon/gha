# This workflow was automatically generated from templates
# Source: workflows/ci-node.yml
# Generated: 2025-06-22T00:24:42.680Z
# Generator: GitHub Actions Template Builder

# DO NOT EDIT THIS FILE DIRECTLY
# Instead, edit the source templates and regenerate

name: Node.js CI
'on':
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      node-version:
        description: Node.js version to use
        required: false
        default: '20'
        type: choice
        options:
          - '18'
          - '20'
          - '21'
env:
  NODE_ENV: test
  CI: true
permissions:
  contents: read
  checks: write
  pull-requests: write
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ github.event.inputs.node-version || '20' }}
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Run linter
        run: npm run lint
      - name: Check formatting
        run: npm run format:check
  test:
    name: Test Node.js ${{ matrix.node-version }}
    runs-on: ${{ matrix.os }}
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        node-version:
          - '18'
          - '20'
          - '21'
        exclude:
          - os: macos-latest
            node-version: '18'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Run tests with coverage
        run: npm test -- --coverage
        env:
          NODE_VERSION: ${{ matrix.node-version }}
      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
  build:
    name: Build
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    outputs:
      version: ${{ steps.version.outputs.version }}
      artifact-path: ${{ steps.upload.outputs.artifact-path }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ github.event.inputs.node-version || '20' }}
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Build project
        run: npm run build
      - name: Get version
        id: version
        run: >-
          echo "version=$(node -p "require('./package.json').version")" >>
          $GITHUB_OUTPUT
      - name: Upload build artifacts
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ steps.version.outputs.version }}
          path: |
            dist/
            build/
            !**/*.map
          retention-days: 30
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run security audit
        run: npm audit --audit-level=moderate
      - name: Run dependency check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: node-project
          path: .
          format: HTML
  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs:
      - build
      - security
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts-${{ needs.build.outputs.version }}
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.build.outputs.version }}
          release_name: Release v${{ needs.build.outputs.version }}
          body: |
            ## Changes in this Release
            - Built from commit: ${{ github.sha }}
            - Build artifacts are attached
          draft: false
          prerelease: false
